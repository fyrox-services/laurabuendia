---
import { buildHeadings } from "@/helpers/buildHeading";
import Close from "@/components/icons/Close.astro";

interface Props {
  body: string;
  slug: string;
}

const { body, slug } = Astro.props;
const headings = buildHeadings(body);
---

<nav
  id="toc"
  aria-label="Tabla de contenidos"
  itemscope
  itemtype="https://schema.org/SiteNavigationElement"
>
  <header>
    <h2 class="heading">tabla de contenidos</h2>
    <button id="close" class="close">
      <Close />
    </button>
  </header>
  <ul>
    {
      headings.map(({ text }, i) => {
        const splitedText = text.split(" ");
        const createSlug = splitedText.join("-");
        return (
          <li class="item">
            <a href={`/${slug}#${createSlug}`} itemprop="url">
              <span class="index">{i + 1}.</span>
              <span class="text" itemprop="name">
                {text}
              </span>
            </a>
          </li>
        );
      })
    }
  </ul>
</nav>

<script>
  import { isTocOpen } from "@/stores";

  const $toc = document.getElementById("toc");
  const $close = document.getElementById("close");

  if ($close !== null) {
    $close.addEventListener("click", () => {
      isTocOpen.set(false);
    });
  }

  isTocOpen.subscribe((visible) => {
    $toc?.classList.toggle("active", visible);
  });
</script>

<style>
  li a {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .index {
    font-size: var(--fs-xs);
    color: var(--dark-500);
  }

  @media (max-width: 1024px) {
    nav {
      position: fixed;
      bottom: var(--bottom-height);
      height: fit-content;
      left: 0;
      display: flex;
      justify-content: center;
      flex-direction: column;
      font-size: var(--fs-xs);
      padding: 1rem;
      gap: 1rem;
      border-radius: var(--radius) var(--radius) 0 0;
      background: rgba(230, 230, 230, 0.819); /* Color semitransparente */
      -webkit-backdrop-filter: blur(12px); /* Compatibilidad con Safari */
      backdrop-filter: blur(12px); /* Aplica el desenfoque */
      z-index: 50;
      box-shadow: var(--shadow);
      transform: translateY(calc(100% + var(--bottom-height)));
      transition: transform 0.5s ease;
    }

    nav.active {
      transform: translateY(0);
    }

    header {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .close {
      display: flex;
      align-items: center;
      justify-content: center;
      color: var(--dark-500);
      background-color: transparent;
      border: none;
    }

    h2 {
      font-size: var(--fs-md);
    }

    ul {
      display: flex;
      flex-direction: column;
      gap: 0.8rem;
      max-height: 40dvh;
      overflow-y: auto;
    }
  }

  /* DESKTOP */
  @media (min-width: 1024px) {
    nav {
      position: sticky;
      top: calc(var(--header-height) * 1.25);
      height: fit-content;
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      max-height: 80dvh;
      overflow-y: auto;
      --fs-base: 14px;
    }

    .close {
      display: none;
    }

    nav::-webkit-scrollbar {
      width: 5px;
    }

    nav::-webkit-scrollbar-track {
      background: var(--gray); /* Color de fondo de la barra */
      border-radius: 10px;
    }

    nav::-webkit-scrollbar-thumb {
      background: var(--dark-900); /* Color del pnavgar (thumb) */
      border-radius: 10px;
    }

    ul {
      display: flex;
      flex-direction: column;
      gap: 0.8rem;
    }

    .heading {
      font-size: var(--fs-md);
    }

    .text {
      color: var(--dark-500);
      font-size: var(--fs-base);
      transition: color 0.3s ease;
    }

    .text:hover {
      color: var(--primary);
    }
  }
</style>
