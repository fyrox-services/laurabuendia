---
const { src, id = "player" } = Astro.props;
// (opcional) hoja de estilos de Plyr si no la tenías ya importada
import "plyr/dist/plyr.css";
---

<astro-wrap data-id={id}>
  <div class="video-container">
    <video id={id} controls src={src}></video>
  </div>
</astro-wrap>

<style is:global>
  /* Marco que limita el espacio del vídeo */
  .video-container {
    /* ancho máximo razonable para un vídeo vertical */
    width: min(360px, 90vw);
    /* mantiene forma vertical; ajusta si tu vídeo no es 9:16 */
    aspect-ratio: 9 / 16;
    max-height: 70vh; /* evita que crezca en exceso */
    margin: 0 auto;
    background: #000;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    border-radius: var(--radius-m);
  }

  /* Haz que el wrapper de Plyr ocupe todo el contenedor */
  .video-container .plyr {
    width: 100%;
    height: 100%;
    box-shadow: var(--shadow);
    border-radius: var(--radius-m);
  }

  /* Evita el "padding-top hack" y usa toda la altura disponible */
  .video-container .plyr__video-wrapper {
    height: 100% !important;
  }

  /* Escala el vídeo sin recortarlo */
  .video-container video {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  /* Colores de controles Plyr */
  .plyr {
    --plyr-video-control-background-hover: var(--primary);
    --plyr-range-fill-background: var(--primary);
    --plyr-color-main: var(--primary);
  }
</style>

<script>
  import Plyr from "plyr"; // si te da TS1192, usa esModuleInterop o importa desde "plyr/dist/plyr.js"

  class AstroGreet extends HTMLElement {
    constructor() {
      super();
      const { id } = this.dataset;
      new Plyr(`#${id}`);
    }
  }

  customElements.define("astro-wrap", AstroGreet);
</script>
